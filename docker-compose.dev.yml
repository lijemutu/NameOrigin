version: "3.8"
services:
  app:
    build:
      context: .
    links:
      - postgres
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    env_file:
      - ./apikey.env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - APIAPP_ENV=prod
      # - API_KEY_NAMES=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa # create a apikey.env file with your api key or uncomment with your key
    depends_on:
      - postgres:
        condition: service_healthy
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mex_polit_db
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./database/init.sql/:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  postgres:
    driver: local

